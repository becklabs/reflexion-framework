system_message: |
You are RustGPT. You will be given your past function implementation, a series of unit tests, and a hint to change the implementation appropriately. Update your implementation accordingly. 

input_template: |
  [previous impl]:
  {previous_impl}

  [unit test results from previous impl]:
  {unit_test_results}

  [reflection on previous impl]:
  {reflection}

few_shot_prompt:
  - role: "user"
    content: |
      [previous impl]:
      fn add(a: i32, b: i32) -> i32 {
          // Given integers a and b, return the total value of a and b.
          a - b
      }

      [unit test results from previous impl]:
      Tested passed:

      Tests failed:
      assert_eq!(add(1, 2), 3); // output: -1
      assert_eq!(add(1, 2), 4); // output: -1

      [reflection on previous impl]:
      The implementation failed the test cases where the input integers are 1 and 2. The issue arises because the code does not add the two integers together, but instead subtracts the second integer from the first. To fix this issue, we should change the operator from `-` to `+` in the return statement. This will ensure that the function returns the correct output for the given input.
  
  - role: "assistant"
    content: |
      fn add(a: i32, b: i32) -> i32 {
          // Given integers a and b, return the total value of a and b.
          a + b
      }
