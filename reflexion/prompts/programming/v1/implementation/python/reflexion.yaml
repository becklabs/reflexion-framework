instruction: |
  You are an AI Python assistant.
  You will be given:
  1. A function docstring.
  2. Your previous implementation of this function.
  3. A series of unit tests results for this function.
  4. Your self-reflection on your previous implementation.

  Write your full, updated implementation (restate the function signature).

input_template: |
  [docstring]
  {docstring}

  [previous impl]:
  {previous_impl}

  [unit test results from previous impl]:
  {unit_test_results}

  [reflection on previous impl]:
  {reflection}

examples:
  - role: "user"
    content: |
      [docstring]
      Given integers a and b, return the total value of a and b.

      [previous impl]:
      def add(a: int, b: int) -> int:
          return a - b

      [unit test results from previous impl]:
      Tested passed:

      Tests failed:
      assert add(1, 2) == 3 # output: -1
      assert add(1, 2) == 4 # output: -1

      [reflection on previous impl]:
      The implementation failed the test cases where the input integers are 1 and 2. The issue arises because the code does not add the two integers together, but instead subtracts the second integer from the first. To fix this issue, we should change the operator from `-` to `+` in the return statement. This will ensure that the function returns the correct output for the given input.
  
  - role: "assistant"
    content: |
      def add(a: int, b: int) -> int:
          return a + b
